//#pragma once
//
//#include <iostream>
//#include <string>
//
//
//#include "SFML/Graphics.hpp"
//#include "SFML/Window/Keyboard.hpp"

//#include <windows.h>
//static sf::RenderWindow* window;

//#include "sprite.hpp"
//#include "Text.hpp"
//#include "Sound.hpp"
//#include "music.hpp"
//#include "Input.hpp"
//#include "Scene.hpp"

//typedef sf::Keyboard::Key KEY;
//typedef sf::Mouse::Button MOUSE;
//typedef sf::Vector2f Vector2f;


//
//
//void draw(sf::Sprite* t, bool borda = false);
//
//void write(sf::Text* Text);

//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Retorna a movimentação do scroll do mouse. </summary>
/////
///// <returns>	Se for positivo é para cima, se for negativo é para baixo. </returns>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//int getMouseScroll() const;
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Retorna a posição do mouse em X na janela. </summary>
/////
///// <returns>	Coordenada X do mouse </returns>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//int getMouseX() const;
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Retorna a posição do mouse em Y na janela. </summary>
/////
///// <returns>	Coordenada Y do mouse </returns>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//int getMouseY() const;
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Verifica se uma tecla foi pressionada. </summary>
/////
///// <param name="key">	Tecla a ser verificada. </param>
/////
///// <returns>	true se a tecla foi pressionada e false se não foi </returns>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//bool isKeyPressed(KEY key);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Verifica se um botão do mouse foi pressionado. </summary>
/////
///// <param name="mouse">	Botão do mouse a ser verificado. </param>
/////
///// <returns>	true se o botão foi pressionado e false se não foi. </returns>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//bool isButtonPressed(MOUSE mouse);

//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, char value);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, float value);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, double value);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, int value);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, std::string value);
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
///// <summary>	Exibe no terminal o texto e seu valor </summary>
/////
///// <param name="key">  	Texto </param>
///// <param name="value">	Variável </param>
//////////////////////////////////////////////////////////////////////////////////////////////////////
//void debug(std::string key, bool value);